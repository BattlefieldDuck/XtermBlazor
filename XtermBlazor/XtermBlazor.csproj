<Project Sdk="Microsoft.NET.Sdk.Razor">

	<PropertyGroup>
		<TargetFrameworks>net9.0;net8.0;net7.0;net6.0</TargetFrameworks>
	</PropertyGroup>

	<ItemGroup>
		<SupportedPlatform Include="browser" />
	</ItemGroup>

	<PropertyGroup>
		<!-- VS's FastUpToDateCheck doesn't consider .ts file changes, so it's necessary to disable it
		to get incremental builds to work correctly (albeit not as fast as if FastUpToDateCheck did work
		for them) -->
		<DisableFastUpToDateCheck>true</DisableFastUpToDateCheck>
		<Authors>BattlefieldDuck</Authors>
		<RepositoryUrl>https://github.com/BattlefieldDuck/XtermBlazor</RepositoryUrl>
		<PackageProjectUrl>https://github.com/BattlefieldDuck/XtermBlazor</PackageProjectUrl>
		<PackageLicenseFile>LICENSE</PackageLicenseFile>
		<Description>Brings xterm.js to Blazor</Description>
		<PackageIcon>icon.png</PackageIcon>
		<Version>2.1.2</Version>
		<PackageTags>
			xterm, xterm-js, blazor, blazor-server, blazor-webassembly, blazor-wasm,
			xtermblazor
		</PackageTags>
		<GeneratePackageOnBuild>true</GeneratePackageOnBuild>
		<GenerateDocumentationFile>true</GenerateDocumentationFile>
		<Nullable>enable</Nullable>
		<PackageReadmeFile>README.md</PackageReadmeFile>
		<LangVersion>12.0</LangVersion>
	</PropertyGroup>

	<PropertyGroup Label="SourceLink">
		<PublishRepositoryUrl>true</PublishRepositoryUrl>
		<EmbedUntrackedSources>true</EmbedUntrackedSources>
		<IncludeSymbols>true</IncludeSymbols>
		<SymbolPackageFormat>snupkg</SymbolPackageFormat>
	</PropertyGroup>

	<PropertyGroup Condition="'$(GITHUB_ACTIONS)' == 'true'">
		<ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
	</PropertyGroup>

	<ItemGroup Condition="'$(TargetFramework)' == 'net6.0'">
		<PackageReference Include="Macross.Json.Extensions" Version="3.0.0" />
		<PackageReference Include="Microsoft.AspNetCore.Components.Web" Version="6.0.36" />
	</ItemGroup>

	<ItemGroup Condition="'$(TargetFramework)' == 'net7.0'">
		<PackageReference Include="Macross.Json.Extensions" Version="3.0.0" />
		<PackageReference Include="Microsoft.AspNetCore.Components.Web" Version="7.0.20" />
	</ItemGroup>

	<ItemGroup Condition="'$(TargetFramework)' == 'net8.0'">
		<PackageReference Include="Macross.Json.Extensions" Version="3.0.0" />
		<PackageReference Include="Microsoft.AspNetCore.Components.Web" Version="8.0.20" />
	</ItemGroup>

	<ItemGroup Condition="'$(TargetFramework)' == 'net9.0'">
		<PackageReference Include="Macross.Json.Extensions" Version="3.0.0" />
		<PackageReference Include="Microsoft.AspNetCore.Components.Web" Version="9.0.9" />
	</ItemGroup>

	<ItemGroup Condition="'$(TargetFramework)' == 'net10.0'">
		<PackageReference Include="Macross.Json.Extensions" Version="3.0.0" />
		<PackageReference Include="Microsoft.AspNetCore.Components.Web" Version="10.0.0-rc.1.25451.107" />
	</ItemGroup>

	<ItemGroup>
		<WebpackFiles Include="$(ProjectDir)src\**.*;" />
		<CompiledWebpackFiles Include="$(OutDir)wwwroot\XtermBlazor.min.js;$(OutDir)wwwroot\XtermBlazor.min.css" />
		<NodePackageSource Include="$(ProjectDir)src\package.json;$(ProjectDir)package-lock.json" />
	</ItemGroup>

	<Target Name="NpmInstall" BeforeTargets="NpmBuild" Inputs="@(NodePackageSource)" Outputs="$(ProjectDir)src\node_modules\.source">
		<Message Text="Installing Node Dependencies (NpmInstall) $(OutDir)" Importance="high" />
		<Exec Command="npm ci -q" WorkingDirectory="src" Condition="$(Configuration) == 'Release'" />
		<Exec Command="npm install -q" WorkingDirectory="src" Condition="$(Configuration) == 'Debug'" />
		<Touch Files="$(ProjectDir)src\node_modules\.source" AlwaysCreate="true" />
	</Target>

	<Target Name="NpmBuild" BeforeTargets="DispatchToInnerBuilds" Inputs="@(WebpackFiles)" Outputs="@(CompiledWebpackFiles)">
		<Message Text="Create `wwwroot/XtermBlazor.min.js` and `wwwroot/XtermBlazor.min.css`" Importance="high" />
		<Exec Command="npm run build:production" WorkingDirectory="src" Condition="$(Configuration) == 'Release'" />
		<Exec Command="npm run build" WorkingDirectory="src" Condition="$(Configuration) == 'Debug'" />
	</Target>

	<Target Name="NpmClean" BeforeTargets="Clean">
		<Message Text="Cleaning Built Files" />
		<Delete Files="@(CompiledWebpackFiles)" />
		<RemoveDir Directories="$(ProjectDir)src\node_modules" />
	</Target>

	<ItemGroup>
		<Content Update="src\**">
			<Pack>False</Pack>
			<CopyToOutputDirectory>Never</CopyToOutputDirectory>
		</Content>
	</ItemGroup>

	<ItemGroup>
		<None Include="..\LICENSE">
			<Pack>True</Pack>
			<PackagePath>\</PackagePath>
		</None>
		<None Include="..\README.md">
			<Pack>True</Pack>
			<PackagePath>\</PackagePath>
		</None>
		<None Include="icon.png">
			<Pack>True</Pack>
			<PackagePath>\</PackagePath>
		</None>
		<Folder Include="wwwroot\" />
	</ItemGroup>

</Project>